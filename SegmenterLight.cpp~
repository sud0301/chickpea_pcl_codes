#include <iostream>
#include <pcl/ModelCoefficients.h>
#include <pcl/io/pcd_io.h>
#include <pcl/point_types.h>
#include <pcl/sample_consensus/method_types.h>
#include <pcl/sample_consensus/model_types.h>
#include <pcl/segmentation/sac_segmentation.h>
#include <pcl/filters/voxel_grid.h>
#include <pcl/filters/extract_indices.h>
#include "v4r/SegmenterLight/SegmenterLight.h"

int
main (int argc, char** argv)
{
	pcl::PointCloud<pcl::PointXYZRGB>::Ptr cloud (new pcl::PointCloud<pcl::PointXYZ>);

  	if (pcl::io::loadPCDFile<pcl::PointXYZRGB> ("test_pcd.pcd", *cloud) == -1) //* load the file
  	{
    		PCL_ERROR ("Couldn't read file test_pcd.pcd \n");
    		return (-1);
  	}

	pcl::PointCloud<pcl::PointXYZRGBL>::Ptr pcl_cloud(new pcl::PointCloud<pcl::PointXYZRGBL>);
  	std::string modelPath = *cloud //"/home/sud/Downloads/Web/OSD-0.2/pcd/learn10.pcd";
  	pcl::PointCloud<pcl::PointXYZRGBL>::Ptr pcl_cloud_labeled(new pcl::PointCloud<pcl::PointXYZRGBL>);
  	segment::SegmenterLight seg(modelPath);
  	seg.setFast(true);
  	seg.setDetail(0);        
  	pcl_cloud_labeled = seg.processPointCloud(pcl_cloud);

 

  return (0);
}
